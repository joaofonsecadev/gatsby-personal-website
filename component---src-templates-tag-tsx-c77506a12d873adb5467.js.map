{"version":3,"file":"component---src-templates-tag-tsx-c77506a12d873adb5467.js","mappings":"yNAOe,SAASA,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,KACxBC,EAD6C,EAAfC,YAC9BD,IACFE,EAAWH,EAAKI,kBAAkBC,MAChCC,EAAeN,EAAKI,kBAApBE,WACFC,GAAqBC,EAAAA,EAAAA,UACzB,kBAAMC,EAAAA,EAAAA,GAAsBN,KAC5B,CAACA,IAGH,OACEO,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,CAAQC,MAAK,QAAUX,EAAV,IAAiBY,EAAAA,EAAAA,WAC9BH,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,aACbJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAAA,mBAA6B,IAC7BA,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,qBAAqBb,IAEvCS,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,eACXJ,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,gBAAgBR,GAChB,IAAfA,EAAmB,iBAAmB,qBAI7CI,EAAAA,cAAAA,UAAAA,CAASI,UAAU,aACjBJ,EAAAA,cAACK,EAAAA,EAAD,CAAUf,KAAMO","sources":["webpack://joaofonseca.dev/./src/templates/tag.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Helmet from \"react-helmet\";\nimport PostList from \"../components/PostList\";\nimport { getSimplifiedArticles } from \"../utils/helpers\";\nimport config from \"../utils/config\";\n\nexport default function Article({ data, pageContext }) {\n  const { tag } = pageContext;\n  const articles = data.allMarkdownRemark.edges;\n  const { totalCount } = data.allMarkdownRemark;\n  const simplifiedArticles = useMemo(\n    () => getSimplifiedArticles(articles),\n    [articles]\n  );\n\n  return (\n    <>\n      <Helmet title={`Tag: ${tag} ${config.titleSep}`} />\n      <article>\n        <header>\n          <div className=\"container\">\n            <h1>\n              <span>Articles tagged</span>{\" \"}\n              <span className=\"primary-underline\">{tag}</span>\n            </h1>\n            <p className=\"description\">\n              <span className=\"count bright\">{totalCount}</span>\n              {totalCount === 1 ? \" article found\" : \" articles found\"}\n            </p>\n          </div>\n        </header>\n        <section className=\"container\">\n          <PostList data={simplifiedArticles} />\n        </section>\n      </article>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String = \"book review\") {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { tags: { in: [$tag] }, public: { eq: \"true\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Article","data","tag","pageContext","articles","allMarkdownRemark","edges","totalCount","simplifiedArticles","useMemo","getSimplifiedArticles","React","Helmet","title","config","className","PostList"],"sourceRoot":""}