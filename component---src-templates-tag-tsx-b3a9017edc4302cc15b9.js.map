{"version":3,"file":"component---src-templates-tag-tsx-b3a9017edc4302cc15b9.js","mappings":"yNAOe,SAASA,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,KACxBC,EAD6C,EAAfC,YAC9BD,IACFE,EAAWH,EAAKI,kBAAkBC,MAChCC,EAAeN,EAAKI,kBAApBE,WACFC,GAAqBC,EAAAA,EAAAA,UACzB,kBAAMC,EAAAA,EAAAA,GAAsBN,KAC5B,CAACA,IAGH,OACEO,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,CAAQC,MAAK,QAAUX,EAAV,IAAiBY,EAAAA,EAAAA,WAC9BH,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,aACbJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAAA,mBAA6B,IAC7BA,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,qBAAqBb,IAEvCS,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,eACXJ,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,gBAAgBR,GAChB,IAAfA,EAAmB,iBAAmB,qBAI7CI,EAAAA,cAAAA,UAAAA,CAASI,UAAU,aACjBJ,EAAAA,cAACK,EAAAA,EAAD,CAAUf,KAAMO","sources":["webpack://joaofonseca.dev/./src/templates/tag.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Helmet from \"react-helmet\";\r\nimport PostList from \"../components/PostList\";\r\nimport { getSimplifiedArticles } from \"../utils/helpers\";\r\nimport config from \"../utils/config\";\r\n\r\nexport default function Article({ data, pageContext }) {\r\n  const { tag } = pageContext;\r\n  const articles = data.allMarkdownRemark.edges;\r\n  const { totalCount } = data.allMarkdownRemark;\r\n  const simplifiedArticles = useMemo(\r\n    () => getSimplifiedArticles(articles),\r\n    [articles]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={`Tag: ${tag} ${config.titleSep}`} />\r\n      <article>\r\n        <header>\r\n          <div className=\"container\">\r\n            <h1>\r\n              <span>Articles tagged</span>{\" \"}\r\n              <span className=\"primary-underline\">{tag}</span>\r\n            </h1>\r\n            <p className=\"description\">\r\n              <span className=\"count bright\">{totalCount}</span>\r\n              {totalCount === 1 ? \" article found\" : \" articles found\"}\r\n            </p>\r\n          </div>\r\n        </header>\r\n        <section className=\"container\">\r\n          <PostList data={simplifiedArticles} />\r\n        </section>\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String = \"book review\") {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, public: { eq: \"true\" } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            tags\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Article","data","tag","pageContext","articles","allMarkdownRemark","edges","totalCount","simplifiedArticles","useMemo","getSimplifiedArticles","React","Helmet","title","config","className","PostList"],"sourceRoot":""}